[{"D:\\Projects\\portfolio\\src\\index.js":"1","D:\\Projects\\portfolio\\src\\App.js":"2","D:\\Projects\\portfolio\\src\\reportWebVitals.js":"3","D:\\Projects\\portfolio\\src\\components\\Card.js":"4","D:\\Projects\\mstech66.github.io\\src\\index.js":"5","D:\\Projects\\mstech66.github.io\\src\\App.js":"6","D:\\Projects\\mstech66.github.io\\src\\reportWebVitals.js":"7","D:\\Projects\\mstech66.github.io\\src\\components\\Card.js":"8","D:\\Projects\\mstech66.github.io\\src\\components\\SocialBar.js":"9","D:\\Projects\\mstech66.github.io\\src\\components\\CodeBar.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":635,"mtime":1607314098122,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1229,"mtime":1607314106640,"results":"15","hashOfConfig":"12"},{"size":517,"mtime":1607916840529,"results":"16","hashOfConfig":"17"},{"size":2300,"mtime":1608049032802,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1607916840530,"results":"19","hashOfConfig":"17"},{"size":1514,"mtime":1607957811401,"results":"20","hashOfConfig":"17"},{"size":1614,"mtime":1607961204751,"results":"21","hashOfConfig":"17"},{"size":2087,"mtime":1607950563413,"results":"22","hashOfConfig":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"4fnvah",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1shoncc",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},"D:\\Projects\\portfolio\\src\\index.js",[],["47","48"],"D:\\Projects\\portfolio\\src\\App.js",[],"D:\\Projects\\portfolio\\src\\reportWebVitals.js",[],"D:\\Projects\\portfolio\\src\\components\\Card.js",[],"D:\\Projects\\mstech66.github.io\\src\\index.js",[],["49","50"],"D:\\Projects\\mstech66.github.io\\src\\App.js",[],"D:\\Projects\\mstech66.github.io\\src\\reportWebVitals.js",[],"D:\\Projects\\mstech66.github.io\\src\\components\\Card.js",["51","52"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faReact } from '@fortawesome/free-brands-svg-icons';\r\nimport CodeBar from './CodeBar';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 328,\r\n    maxWidth: 328\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function ProjectCard(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.descr}\r\n          </Typography>\r\n          <CodeBar values={props.langUsed} />\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions style={{ padding: '16px' }}>\r\n        <Button size=\"small\" variant=\"outlined\" color=\"primary\">\r\n          Explore Code\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","D:\\Projects\\mstech66.github.io\\src\\components\\SocialBar.js",[],"D:\\Projects\\mstech66.github.io\\src\\components\\CodeBar.js",["53","54"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport react from '../images/logo/React.png';\r\nimport android from '../images/logo/android.png';\r\nimport angular from '../images/logo/angular.png';\r\nimport css from '../images/logo/css3.png';\r\nimport figma from '../images/logo/figma2.png';\r\nimport firebase from '../images/logo/firebase2.png';\r\nimport flutter from '../images/logo/flutter2.png';\r\nimport git from '../images/logo/bash.png';\r\nimport js from '../images/logo/js.png';\r\nimport java from '../images/logo/java2.png';\r\nimport kotlin from '../images/logo/kotlin2.png';\r\nimport mongo from '../images/logo/mongodb.png';\r\nimport node from '../images/logo/nodejs.png'\r\nimport pi from '../images/logo/pi.png'\r\nimport python from '../images/logo/python.png';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nconst languages = {\r\n    android: android,\r\n    angular: angular,\r\n    css: css,\r\n    figma: figma,\r\n    firebase: firebase,\r\n    flutter: flutter,\r\n    git: git,\r\n    java: java,\r\n    js: js,\r\n    kotlin: kotlin,\r\n    mongo: mongo,\r\n    node: node,\r\n    python: python,\r\n    react: react,\r\n    raspberrypi: pi\r\n};\r\n\r\nString.prototype.capitalize = function() {\r\n    return this.charAt(0).toUpperCase() + this.slice(1)\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        margin: '24px 0px 0px 0px'\r\n    },\r\n    codeLogo: {\r\n        display: 'inline-block',\r\n        marginRight: '12px',\r\n        width: 'auto',\r\n        height: '24px'\r\n    }\r\n});\r\n\r\nfunction CodeLogo(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Tooltip title={props.title.capitalize()} placement=\"top\">\r\n            <img src={props.name} className={classes.codeLogo} />\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nfunction CodeBar(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {\r\n                props.values.map((value) => {\r\n                    return <CodeLogo name={languages[value]} title={value} />\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodeBar;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":25},{"ruleId":"61","severity":1,"message":"65","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":17},{"ruleId":"66","severity":1,"message":"67","line":38,"column":1,"nodeType":"68","messageId":"69","endLine":40,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":58,"column":13,"nodeType":"72","endLine":58,"endColumn":66},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'faReact' is defined but never used.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]